### Starting build.
# Target: spawk.ml.depends, tags: { debug, extension:ml, file:spawk.ml, ocaml, ocamldep, package(core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), quiet, syntax(camlp4o), thread, traverse, use_str }
ocamlfind ocamldep -package core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -syntax camlp4o -modules spawk.ml > spawk.ml.depends # cached
# Target: ast.ml.depends, tags: { debug, extension:ml, file:ast.ml, ocaml, ocamldep, package(core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), quiet, syntax(camlp4o), thread, traverse, use_str }
ocamlfind ocamldep -package core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -syntax camlp4o -modules ast.ml > ast.ml.depends # cached
# Target: ast.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:ast.cmo, file:ast.ml, implem, ocaml, package(core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), quiet, syntax(camlp4o), thread, traverse, use_str }
ocamlfind ocamlc -c -g -thread -package core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -syntax camlp4o -o ast.cmo ast.ml # cached
# Target: codegen.ml.depends, tags: { debug, extension:ml, file:codegen.ml, ocaml, ocamldep, package(core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), quiet, syntax(camlp4o), thread, traverse, use_str }
ocamlfind ocamldep -package core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -syntax camlp4o -modules codegen.ml > codegen.ml.depends # cached
# Target: codegen.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:codegen.cmo, file:codegen.ml, implem, ocaml, package(core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), quiet, syntax(camlp4o), thread, traverse, use_str }
ocamlfind ocamlc -c -g -thread -package core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -syntax camlp4o -o codegen.cmo codegen.ml # cached
# Target: lexer.mll, tags: { debug, extension:mll, file:lexer.mll, lexer, ocaml, ocamllex, package(core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), quiet, syntax(camlp4o), thread, traverse, use_str }
/usr/local/bin/ocamllex.opt -q lexer.mll # cached
# Target: lexer.ml.depends, tags: { debug, extension:ml, file:lexer.ml, ocaml, ocamldep, package(core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), quiet, syntax(camlp4o), thread, traverse, use_str }
ocamlfind ocamldep -package core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -syntax camlp4o -modules lexer.ml > lexer.ml.depends # cached
# Target: parser.mly.depends, tags: { debug, extension:mly, file:parser.mly, menhir_ocamldep, ocaml, ocamldep, package(core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), quiet, syntax(camlp4o), thread, traverse, use_str }
menhir --raw-depend --ocamldep 'ocamlfind ocamldep -modules' parser.mly > parser.mly.depends # cached
# Target: parser.mly, tags: { byte, compile, debug, extension:mly, file:parser.mly, menhir, ocaml, package(core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), parser, quiet, syntax(camlp4o), thread, traverse, use_str }
menhir --ocamlc 'ocamlfind ocamlc -g -thread -package core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -syntax camlp4o' --trace --infer parser.mly # cached
# Target: parser.mli.depends, tags: { debug, extension:mli, file:parser.mli, ocaml, ocamldep, package(core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), quiet, syntax(camlp4o), thread, traverse, use_str }
ocamlfind ocamldep -package core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -syntax camlp4o -modules parser.mli > parser.mli.depends # cached
# Target: parser.cmi, tags: { byte, compile, debug, extension:mli, file:parser.mli, interf, ocaml, package(core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), quiet, syntax(camlp4o), thread, traverse, use_str }
ocamlfind ocamlc -c -g -thread -package core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -syntax camlp4o -o parser.cmi parser.mli # cached
# Target: lexer.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:lexer.cmo, file:lexer.ml, implem, ocaml, package(core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), quiet, syntax(camlp4o), thread, traverse, use_str }
ocamlfind ocamlc -c -g -thread -package core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -syntax camlp4o -o lexer.cmo lexer.ml # cached
# Target: sast.ml.depends, tags: { debug, extension:ml, file:sast.ml, ocaml, ocamldep, package(core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), quiet, syntax(camlp4o), thread, traverse, use_str }
ocamlfind ocamldep -package core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -syntax camlp4o -modules sast.ml > sast.ml.depends # cached
# Target: sast.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:sast.cmo, file:sast.ml, implem, ocaml, package(core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), quiet, syntax(camlp4o), thread, traverse, use_str }
ocamlfind ocamlc -c -g -thread -package core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -syntax camlp4o -o sast.cmo sast.ml # cached
# Target: spawk.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:spawk.cmo, file:spawk.ml, implem, ocaml, package(core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), quiet, syntax(camlp4o), thread, traverse, use_str }
ocamlfind ocamlc -c -g -thread -package core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -syntax camlp4o -o spawk.cmo spawk.ml # cached
# Target: ast.cmx, tags: { compile, debug, extension:cmx, extension:ml, file:ast.cmx, file:ast.ml, implem, native, ocaml, package(core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), quiet, syntax(camlp4o), thread, traverse, use_str }
ocamlfind ocamlopt -c -g -thread -package core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -syntax camlp4o -o ast.cmx ast.ml # cached
# Target: codegen.cmx, tags: { compile, debug, extension:cmx, extension:ml, file:codegen.cmx, file:codegen.ml, implem, native, ocaml, package(core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), quiet, syntax(camlp4o), thread, traverse, use_str }
ocamlfind ocamlopt -c -g -thread -package core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -syntax camlp4o -o codegen.cmx codegen.ml # cached
# Target: parser.ml.depends, tags: { debug, extension:ml, file:parser.ml, ocaml, ocamldep, package(core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), quiet, syntax(camlp4o), thread, traverse, use_str }
ocamlfind ocamldep -package core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -syntax camlp4o -modules parser.ml > parser.ml.depends # cached
# Target: parser.cmx, tags: { compile, debug, extension:cmx, extension:ml, file:parser.cmx, file:parser.ml, implem, native, ocaml, package(core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), quiet, syntax(camlp4o), thread, traverse, use_str }
ocamlfind ocamlopt -c -g -thread -package core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -syntax camlp4o -o parser.cmx parser.ml # cached
# Target: lexer.cmx, tags: { compile, debug, extension:cmx, extension:ml, file:lexer.cmx, file:lexer.ml, implem, native, ocaml, package(core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), quiet, syntax(camlp4o), thread, traverse, use_str }
ocamlfind ocamlopt -c -g -thread -package core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -syntax camlp4o -o lexer.cmx lexer.ml # cached
# Target: sast.cmx, tags: { compile, debug, extension:cmx, extension:ml, file:sast.cmx, file:sast.ml, implem, native, ocaml, package(core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), quiet, syntax(camlp4o), thread, traverse, use_str }
ocamlfind ocamlopt -c -g -thread -package core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -syntax camlp4o -o sast.cmx sast.ml # cached
# Target: spawk.cmx, tags: { compile, debug, extension:cmx, extension:ml, file:spawk.cmx, file:spawk.ml, implem, native, ocaml, package(core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), quiet, syntax(camlp4o), thread, traverse, use_str }
ocamlfind ocamlopt -c -g -thread -package core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -syntax camlp4o -o spawk.cmx spawk.ml # cached
# Target: spawk.native, tags: { debug, dont_link_with, extension:native, file:spawk.native, link, native, ocaml, package(core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax), program, quiet, syntax(camlp4o), thread, traverse, use_str }
ocamlfind ocamlopt -linkpkg str.cmxa -g -thread -package core,sexplib.syntax,bin_prot.syntax,comparelib.syntax,fieldslib.syntax,variantslib.syntax -syntax camlp4o ast.cmx codegen.cmx parser.cmx lexer.cmx sast.cmx spawk.cmx -o spawk.native # cached
# Compilation successful.
